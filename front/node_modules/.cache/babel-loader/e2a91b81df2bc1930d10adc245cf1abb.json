{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/sebastiancrossa/dev/entrevista-atrato/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/sebastiancrossa/dev/entrevista-atrato/src/containers/Form/PatientForm/PatientForm.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  margin-right: 0.5rem;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background: pink;\\n  align-self: center;\\n  font-size: 1.3rem;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 1.5rem;\\n\\n  color: var(--color-text);\\n  margin-bottom: 1.5rem;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { FormWrapper, StyledForm, StyledFormRow } from '../../../hoc/Layout/elements'; // Component imports\n\nimport Input from '../../../components/UI/Forms/Input/Input';\nimport Button from '../../../components/UI/Forms/Button/Button';\nimport DescriptionBlock from '../../../components/UI/Forms/DescriptionBlock/DescriptionBlock';\nconst Header = styled.h1(_templateObject());\nconst StyledLabel = styled.label(_templateObject2());\nconst StyledInput = styled.input(_templateObject3());\nconst PatientFormSchema = Yup.object().shape({\n  firstName: Yup.string().required('Escriba su nombre').min(3, 'Nombre muy corto').max(25, 'Nombre muy largo'),\n  lastName: Yup.string().required('Escriba sus apellidos').min(3, 'Apellido muy corto').max(25, 'Apellido muy largo'),\n  email: Yup.string().email('Correo electronico invalido').required('Favor de escribir un correo'),\n  age: Yup.number().required('Favor de introducir edad').min(18, 'Debe ser mayor de edad para mandar una solicitud').positive('Numero invalido'),\n  averageMonthlyIncome: Yup.number().positive('Numer invalido').required('Favor de introducir ingreso')\n});\n\nconst PatientForm = ({\n  loading\n}) => {\n  return React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      age: '',\n      averageMonthlyIncome: ''\n    },\n    validationSchema: PatientFormSchema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, ({\n    isSubmitting,\n    isValid\n  }) => React.createElement(FormWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Llene la siguiente solicitud\"), React.createElement(StyledFormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"text\",\n    name: \"Nombre\",\n    placeholder: \"Nombre...\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"text\",\n    name: \"Apellido\",\n    placeholder: \"Apellido...\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(Field, {\n    type: \"email\",\n    name: \"Correo\",\n    placeholder: \"Correo..\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(StyledFormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"number\",\n    name: \"Edad\",\n    placeholder: \"Edad...\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(StyledLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(StyledInput, {\n    type: \"checkbox\",\n    name: \"maritalStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), \"Casad@\")), React.createElement(Field, {\n    type: \"number\",\n    name: \"Ingreso mensual promedio\",\n    placeholder: \"Ingreso mensual promedio\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(Button, {\n    disabled: !isValid || isSubmitting,\n    loading: loading ? 'Mandando solicitud...' : null,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Solicitar\")), React.createElement(DescriptionBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Simplifica tu tratamiento a pagos mensuales f\\xE1ciles, sin comisiones ocultas ni sorpresas.\")));\n};\n\nexport default PatientForm;","map":{"version":3,"sources":["/Users/sebastiancrossa/dev/entrevista-atrato/src/containers/Form/PatientForm/PatientForm.js"],"names":["React","styled","Formik","Form","Field","ErrorMessage","Yup","FormWrapper","StyledForm","StyledFormRow","Input","Button","DescriptionBlock","Header","h1","StyledLabel","label","StyledInput","input","PatientFormSchema","object","shape","firstName","string","required","min","max","lastName","email","age","number","positive","averageMonthlyIncome","PatientForm","loading","values","setSubmitting","console","log","isSubmitting","isValid"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SACEC,WADF,EAEEC,UAFF,EAGEC,aAHF,QAIO,8BAJP,C,CAMA;;AACA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,OAAOC,MAAP,MAAmB,4CAAnB;AACA,OAAOC,gBAAP,MAA6B,gEAA7B;AAEA,MAAMC,MAAM,GAAGZ,MAAM,CAACa,EAAV,mBAAZ;AAOA,MAAMC,WAAW,GAAGd,MAAM,CAACe,KAAV,oBAAjB;AAMA,MAAMC,WAAW,GAAGhB,MAAM,CAACiB,KAAV,oBAAjB;AAIA,MAAMC,iBAAiB,GAAGb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AAC3CC,EAAAA,SAAS,EAAEhB,GAAG,CAACiB,MAAJ,GACRC,QADQ,CACC,mBADD,EAERC,GAFQ,CAEJ,CAFI,EAED,kBAFC,EAGRC,GAHQ,CAGJ,EAHI,EAGA,kBAHA,CADgC;AAK3CC,EAAAA,QAAQ,EAAErB,GAAG,CAACiB,MAAJ,GACPC,QADO,CACE,uBADF,EAEPC,GAFO,CAEH,CAFG,EAEA,oBAFA,EAGPC,GAHO,CAGH,EAHG,EAGC,oBAHD,CALiC;AAS3CE,EAAAA,KAAK,EAAEtB,GAAG,CAACiB,MAAJ,GACJK,KADI,CACE,6BADF,EAEJJ,QAFI,CAEK,6BAFL,CAToC;AAY3CK,EAAAA,GAAG,EAAEvB,GAAG,CAACwB,MAAJ,GACFN,QADE,CACO,0BADP,EAEFC,GAFE,CAEE,EAFF,EAEM,kDAFN,EAGFM,QAHE,CAGO,iBAHP,CAZsC;AAgB3CC,EAAAA,oBAAoB,EAAE1B,GAAG,CAACwB,MAAJ,GACnBC,QADmB,CACV,gBADU,EAEnBP,QAFmB,CAEV,6BAFU;AAhBqB,CAAnB,CAA1B;;AAqBA,MAAMS,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACnC,SACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbZ,MAAAA,SAAS,EAAE,EADE;AAEbK,MAAAA,QAAQ,EAAE,EAFG;AAGbC,MAAAA,KAAK,EAAE,EAHM;AAIbC,MAAAA,GAAG,EAAE,EAJQ;AAKbG,MAAAA,oBAAoB,EAAE;AALT,KADjB;AAQE,IAAA,gBAAgB,EAAEb,iBARpB;AASE,IAAA,QAAQ,EAAE,CAACgB,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaG,CAAC;AAAEI,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,KACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,SAAS,EAAE9B,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,SAAS,EAAEA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF,EAkBE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,SAAS,EAAEA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAyBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,SAHd;AAIE,IAAA,SAAS,EAAEA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,IAAI,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,WARF,CAzBF,EAuCE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,0BAFP;AAGE,IAAA,WAAW,EAAC,0BAHd;AAIE,IAAA,SAAS,EAAEA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,EA8CE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAE,CAAC8B,OAAD,IAAYD,YADxB;AAEE,IAAA,OAAO,EAAEL,OAAO,GAAG,uBAAH,GAA6B,IAF/C;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA9CF,CADF,EAwDE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGAxDF,CAdJ,CADF;AA+ED,CAhFD;;AAkFA,eAAeD,WAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  FormWrapper,\n  StyledForm,\n  StyledFormRow\n} from '../../../hoc/Layout/elements';\n\n// Component imports\nimport Input from '../../../components/UI/Forms/Input/Input';\nimport Button from '../../../components/UI/Forms/Button/Button';\nimport DescriptionBlock from '../../../components/UI/Forms/DescriptionBlock/DescriptionBlock';\n\nconst Header = styled.h1`\n  font-size: 1.5rem;\n\n  color: var(--color-text);\n  margin-bottom: 1.5rem;\n`;\n\nconst StyledLabel = styled.label`\n  background: pink;\n  align-self: center;\n  font-size: 1.3rem;\n`;\n\nconst StyledInput = styled.input`\n  margin-right: 0.5rem;\n`;\n\nconst PatientFormSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .required('Escriba su nombre')\n    .min(3, 'Nombre muy corto')\n    .max(25, 'Nombre muy largo'),\n  lastName: Yup.string()\n    .required('Escriba sus apellidos')\n    .min(3, 'Apellido muy corto')\n    .max(25, 'Apellido muy largo'),\n  email: Yup.string()\n    .email('Correo electronico invalido')\n    .required('Favor de escribir un correo'),\n  age: Yup.number()\n    .required('Favor de introducir edad')\n    .min(18, 'Debe ser mayor de edad para mandar una solicitud')\n    .positive('Numero invalido'),\n  averageMonthlyIncome: Yup.number()\n    .positive('Numer invalido')\n    .required('Favor de introducir ingreso')\n});\n\nconst PatientForm = ({ loading }) => {\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        age: '',\n        averageMonthlyIncome: ''\n      }}\n      validationSchema={PatientFormSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log(values);\n      }}\n    >\n      {({ isSubmitting, isValid }) => (\n        <FormWrapper>\n          <StyledForm>\n            <Header>Llene la siguiente solicitud</Header>\n            <StyledFormRow>\n              <Field\n                type='text'\n                name='Nombre'\n                placeholder='Nombre...'\n                component={Input}\n              />\n\n              <Field\n                type='text'\n                name='Apellido'\n                placeholder='Apellido...'\n                component={Input}\n              />\n            </StyledFormRow>\n\n            <Field\n              type='email'\n              name='Correo'\n              placeholder='Correo..'\n              component={Input}\n            />\n\n            <StyledFormRow>\n              <Field\n                type='number'\n                name='Edad'\n                placeholder='Edad...'\n                component={Input}\n              />\n\n              <StyledLabel>\n                <StyledInput type='checkbox' name='maritalStatus' />\n                Casad@\n              </StyledLabel>\n            </StyledFormRow>\n\n            <Field\n              type='number'\n              name='Ingreso mensual promedio'\n              placeholder='Ingreso mensual promedio'\n              component={Input}\n            />\n\n            <Button\n              disabled={!isValid || isSubmitting}\n              loading={loading ? 'Mandando solicitud...' : null}\n              type='submit'\n            >\n              Solicitar\n            </Button>\n          </StyledForm>\n\n          <DescriptionBlock>\n            Simplifica tu tratamiento a pagos mensuales fáciles, sin comisiones\n            ocultas ni sorpresas.\n          </DescriptionBlock>\n        </FormWrapper>\n      )}\n    </Formik>\n  );\n};\n\nexport default PatientForm;\n"]},"metadata":{},"sourceType":"module"}