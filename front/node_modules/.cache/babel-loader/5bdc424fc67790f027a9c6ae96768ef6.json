{"ast":null,"code":"import _slicedToArray from \"/Users/sebastiancrossa/dev/entrevista-atrato/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/sebastiancrossa/dev/entrevista-atrato/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/sebastiancrossa/dev/entrevista-atrato/front/src/containers/Form/PatientForm/PatientForm.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  margin-right: 0.5rem;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  align-self: center;\\n  font-size: 1.3rem;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 1.5rem;\\n\\n  color: var(--color-text);\\n  margin-bottom: 1.5rem;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions';\nimport axios from 'axios';\nimport { FormWrapper, StyledForm, StyledFormRow } from '../../../hoc/Layout/elements'; // Component imports\n\nimport Input from '../../../components/UI/Forms/Input/Input';\nimport Button from '../../../components/UI/Forms/Button/Button';\nimport DescriptionBlock from '../../../components/UI/Forms/DescriptionBlock/DescriptionBlock';\nconst Header = styled.h1(_templateObject());\nconst StyledLabel = styled.label(_templateObject2());\nconst StyledInput = styled.input(_templateObject3());\nconst PatientFormSchema = Yup.object().shape({\n  firstName: Yup.string().required('Escriba su nombre').min(3, 'Nombre muy corto').max(25, 'Nombre muy largo'),\n  lastName: Yup.string().required('Escriba su apellido').min(3, 'Apellido muy corto').max(25, 'Apellido muy largo'),\n  email: Yup.string().email('Correo electronico invalido').required('Favor de escribir un correo'),\n  age: Yup.number().required('Favor de introducir edad').moreThan(17, 'Debe ser mayor de edad para mandar una solicitud').positive('Numero invalido'),\n  averageMonthlyIncome: Yup.number().positive('Numer invalido').required('Favor de introducir ingreso')\n});\n\nconst PatientForm = ({\n  loading,\n  error,\n  submitForm\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isMarriedBool = _useState2[0],\n        setIsMarried = _useState2[1];\n\n  return React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      age: '',\n      isMarried: false,\n      averageMonthlyIncome: ''\n    },\n    validationSchema: PatientFormSchema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      axios.post('http://localhost:4000/users', {\n        firstName: values.firstName,\n        lastName: values.lastName,\n        email: values.email,\n        age: values.firstName,\n        isMarried: values.isMarried,\n        averageMonthlyIncome: values.averageMontlyIncome\n      }).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.log(err);\n      });\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, ({\n    isSubmitting,\n    isValid\n  }) => React.createElement(FormWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Llene la siguiente solicitud\"), React.createElement(StyledFormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"text\",\n    name: \"firstName\",\n    title: \"Nombre\",\n    placeholder: \"Nombre...\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"text\",\n    name: \"lastName\",\n    title: \"Apellido\",\n    placeholder: \"Apellido...\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    title: \"Correo\",\n    placeholder: \"Correo..\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(StyledFormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"number\",\n    name: \"age\",\n    title: \"Edad\",\n    placeholder: \"Edad...\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"isMarried\",\n    value: isMarriedBool,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, ({\n    field,\n    form\n  }) => React.createElement(StyledLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(StyledInput, {\n    type: \"checkbox\",\n    onClick: () => setIsMarried(!isMarriedBool),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), \"Casad@\"))), React.createElement(Field, {\n    type: \"number\",\n    name: \"averageMonthlyIncome\",\n    title: \"Ingreso mensual promedio\",\n    placeholder: \"Ingreso mensual promedio\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(Button, {\n    disabled: !isValid || isSubmitting,\n    loading: loading ? 'Mandando solicitud...' : null,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Solicitar\")), React.createElement(DescriptionBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Simplifica tu tratamiento a pagos mensuales f\\xE1ciles, sin comisiones ocultas ni sorpresas.\")));\n};\n\nconst mapStateToProps = ({\n  form\n}) => ({\n  loading: form.loading,\n  error: form.error\n});\n\nconst mapDispatchToProps = {\n  submitForm: actions.submitForm\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientForm);","map":{"version":3,"sources":["/Users/sebastiancrossa/dev/entrevista-atrato/front/src/containers/Form/PatientForm/PatientForm.js"],"names":["React","useState","styled","Formik","Form","Field","ErrorMessage","Yup","connect","actions","axios","FormWrapper","StyledForm","StyledFormRow","Input","Button","DescriptionBlock","Header","h1","StyledLabel","label","StyledInput","input","PatientFormSchema","object","shape","firstName","string","required","min","max","lastName","email","age","number","moreThan","positive","averageMonthlyIncome","PatientForm","loading","error","submitForm","isMarriedBool","setIsMarried","isMarried","values","setSubmitting","post","averageMontlyIncome","then","res","console","log","catch","err","isSubmitting","isValid","field","form","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions';\n\nimport axios from 'axios';\n\nimport {\n  FormWrapper,\n  StyledForm,\n  StyledFormRow\n} from '../../../hoc/Layout/elements';\n\n// Component imports\nimport Input from '../../../components/UI/Forms/Input/Input';\nimport Button from '../../../components/UI/Forms/Button/Button';\nimport DescriptionBlock from '../../../components/UI/Forms/DescriptionBlock/DescriptionBlock';\n\nconst Header = styled.h1`\n  font-size: 1.5rem;\n\n  color: var(--color-text);\n  margin-bottom: 1.5rem;\n`;\n\nconst StyledLabel = styled.label`\n  align-self: center;\n  font-size: 1.3rem;\n`;\n\nconst StyledInput = styled.input`\n  margin-right: 0.5rem;\n`;\n\nconst PatientFormSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .required('Escriba su nombre')\n    .min(3, 'Nombre muy corto')\n    .max(25, 'Nombre muy largo'),\n  lastName: Yup.string()\n    .required('Escriba su apellido')\n    .min(3, 'Apellido muy corto')\n    .max(25, 'Apellido muy largo'),\n  email: Yup.string()\n    .email('Correo electronico invalido')\n    .required('Favor de escribir un correo'),\n  age: Yup.number()\n    .required('Favor de introducir edad')\n    .moreThan(17, 'Debe ser mayor de edad para mandar una solicitud')\n    .positive('Numero invalido'),\n  averageMonthlyIncome: Yup.number()\n    .positive('Numer invalido')\n    .required('Favor de introducir ingreso')\n});\n\nconst PatientForm = ({ loading, error, submitForm }) => {\n  const [isMarriedBool, setIsMarried] = useState(false);\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        age: '',\n        isMarried: false,\n        averageMonthlyIncome: ''\n      }}\n      validationSchema={PatientFormSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        axios\n          .post('http://localhost:4000/users', {\n            firstName: values.firstName,\n            lastName: values.lastName,\n            email: values.email,\n            age: values.firstName,\n            isMarried: values.isMarried,\n            averageMonthlyIncome: values.averageMontlyIncome\n          })\n          .then(function(res) {\n            console.log(res);\n          })\n          .catch(function(err) {\n            console.log(err);\n          });\n\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, isValid }) => (\n        <FormWrapper>\n          <StyledForm>\n            <Header>Llene la siguiente solicitud</Header>\n            <StyledFormRow>\n              <Field\n                type='text'\n                name='firstName'\n                title='Nombre'\n                placeholder='Nombre...'\n                component={Input}\n              />\n\n              <Field\n                type='text'\n                name='lastName'\n                title='Apellido'\n                placeholder='Apellido...'\n                component={Input}\n              />\n            </StyledFormRow>\n\n            <Field\n              type='email'\n              name='email'\n              title='Correo'\n              placeholder='Correo..'\n              component={Input}\n            />\n\n            <StyledFormRow>\n              <Field\n                type='number'\n                name='age'\n                title='Edad'\n                placeholder='Edad...'\n                component={Input}\n              />\n\n              <Field name='isMarried' value={isMarriedBool}>\n                {({ field, form }) => (\n                  <StyledLabel>\n                    <StyledInput\n                      type='checkbox'\n                      onClick={() => setIsMarried(!isMarriedBool)}\n                    />\n                    Casad@\n                  </StyledLabel>\n                )}\n              </Field>\n            </StyledFormRow>\n\n            <Field\n              type='number'\n              name='averageMonthlyIncome'\n              title='Ingreso mensual promedio'\n              placeholder='Ingreso mensual promedio'\n              component={Input}\n            />\n\n            <Button\n              disabled={!isValid || isSubmitting}\n              loading={loading ? 'Mandando solicitud...' : null}\n              type='submit'\n            >\n              Solicitar\n            </Button>\n          </StyledForm>\n\n          <DescriptionBlock>\n            Simplifica tu tratamiento a pagos mensuales fáciles, sin comisiones\n            ocultas ni sorpresas.\n          </DescriptionBlock>\n        </FormWrapper>\n      )}\n    </Formik>\n  );\n};\n\nconst mapStateToProps = ({ form }) => ({\n  loading: form.loading,\n  error: form.error\n});\n\nconst mapDispatchToProps = {\n  submitForm: actions.submitForm\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PatientForm);\n"]},"metadata":{},"sourceType":"module"}