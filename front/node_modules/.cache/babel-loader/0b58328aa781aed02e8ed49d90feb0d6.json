{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiancrossa/dev/entrevista-atrato/src/containers/Form/PatientForm/PatientForm.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup'; // Component imports\n\nimport { FormWrapper, StyledForm, StyledFormRow } from '../../../hoc/Layout/elements';\nconst PatientFormSchema = Yup.object().shape({\n  firstName: Yup.string().required('Escriba su nombre').min(3, 'Nombre muy corto').max(25, 'Nombre muy largo'),\n  lastName: Yup.string().required('Escriba sus apellidos').min(3, 'Apellido muy corto').max(25, 'Apellido muy largo'),\n  email: Yup.string().email('Correo electronico invalido').required('Favor de escribir un correo'),\n  age: Yup.number().required('Favor de introducir edad').min(18, 'Debe ser mayor de edad para mandar una solicitud').positive('Numero invalido'),\n  averageMonthlyIncome: Yup.number().positive('Numer invalido').required('Favor de introducir ingreso')\n});\n\nconst PatientForm = () => {\n  return React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      age: '',\n      averageMonthlyIncome: ''\n    },\n    validationSchema: PatientFormSchema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, ({\n    isSubmitting,\n    isValid\n  }) => React.createElement(FormWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(StyledFormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"text\",\n    name: \"firstName\",\n    placeholder: \"Nombre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"text\",\n    name: \"lastName\",\n    placeholder: \"Apellido\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Correo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"number\",\n    name: \"age\",\n    placeholder: \"Edad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"maritalStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), \"Casad@\"), React.createElement(Field, {\n    type: \"number\",\n    name: \"averageMonthlyIncome\",\n    placeholder: \"Ami\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"averageMonthlyIncome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Solicitar\"))));\n};\n\nexport default PatientForm;","map":{"version":3,"sources":["/Users/sebastiancrossa/dev/entrevista-atrato/src/containers/Form/PatientForm/PatientForm.js"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","FormWrapper","StyledForm","StyledFormRow","PatientFormSchema","object","shape","firstName","string","required","min","max","lastName","email","age","number","positive","averageMonthlyIncome","PatientForm","values","setSubmitting","console","log","isSubmitting","isValid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n// Component imports\nimport {\n  FormWrapper,\n  StyledForm,\n  StyledFormRow\n} from '../../../hoc/Layout/elements';\n\nconst PatientFormSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .required('Escriba su nombre')\n    .min(3, 'Nombre muy corto')\n    .max(25, 'Nombre muy largo'),\n  lastName: Yup.string()\n    .required('Escriba sus apellidos')\n    .min(3, 'Apellido muy corto')\n    .max(25, 'Apellido muy largo'),\n  email: Yup.string()\n    .email('Correo electronico invalido')\n    .required('Favor de escribir un correo'),\n  age: Yup.number()\n    .required('Favor de introducir edad')\n    .min(18, 'Debe ser mayor de edad para mandar una solicitud')\n    .positive('Numero invalido'),\n  averageMonthlyIncome: Yup.number()\n    .positive('Numer invalido')\n    .required('Favor de introducir ingreso')\n});\n\nconst PatientForm = () => {\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        age: '',\n        averageMonthlyIncome: ''\n      }}\n      validationSchema={PatientFormSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log(values);\n      }}\n    >\n      {({ isSubmitting, isValid }) => (\n        <FormWrapper>\n          <StyledForm>\n            <StyledFormRow>\n              <Field type='text' name='firstName' placeholder='Nombre' />\n              <ErrorMessage name='firstName' />\n\n              <Field type='text' name='lastName' placeholder='Apellido' />\n              <ErrorMessage name='lastName' />\n            </StyledFormRow>\n\n            <Field type='email' name='email' placeholder='Correo' />\n            <ErrorMessage name='email' />\n\n            <Field type='number' name='age' placeholder='Edad' />\n            <ErrorMessage name='age' />\n\n            <label>\n              <input type='checkbox' name='maritalStatus' />\n              Casad@\n            </label>\n\n            <Field\n              type='number'\n              name='averageMonthlyIncome'\n              placeholder='Ami'\n            />\n            <ErrorMessage name='averageMonthlyIncome' />\n\n            <button type='submit'>Solicitar</button>\n          </StyledForm>\n        </FormWrapper>\n      )}\n    </Formik>\n  );\n};\n\nexport default PatientForm;\n"]},"metadata":{},"sourceType":"module"}